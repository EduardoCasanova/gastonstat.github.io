pch_pal = paste(txt_pal, "55", sep='')
txt_col = txt_pal[unlcass(categories)]
pch_col = pch_pal[unclass(categories)]
# additional params
nobs = length(categories)
nedges = nrow(graph_edges)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 1.5, xpd = TRUE, font = 1)
}
# plot
pretty_tree(df, categories = sectors)
dataset = df
categories = df$Sector
dist_method = "euclidean"
clus_method = "ward.D"
dataset
dataset = dm
categories = df$Sector
dist_method = "euclidean"
clus_method = "ward.D"
dist_data = dist(dataset, method = dist_method)
dm
dataset = Cri[,-1]
dist_data = dist(dataset, method = dist_method)
hcluster = hclust(dist_data, method = clus_method)
num_categs = nlevels(categories)
# convert to phylo object
phylo_tree = as.phylo(hcluster)
# get edges
graph_edges = phylo_tree$edge
# convert to graph
graph_net = graph.edgelist(graph_edges)
# extract layout (x-y coords)
graph_layout = layout.auto(graph_net)
# colors like default ggplot2
ggcolors <- function(n, alfa) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100, alpha = alfa)[1:n]
}
# colors of labels and points
txt_pal = ggcolors(num_categs)
pch_pal = paste(txt_pal, "55", sep='')
txt_col = txt_pal[unlcass(categories)]
pch_col = pch_pal[unclass(categories)]
txt_col = txt_pal[unclass(categories)]
pch_col = pch_pal[unclass(categories)]
txt_col
pch_col
# additional params
nobs = length(categories)
nedges = nrow(graph_edges)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 1.5, xpd = TRUE, font = 1)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 1, xpd = TRUE, font = 1)
unclass(categories)
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 0.3, xpd = TRUE, font = txt_font)
txt_font = unclass(categories)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 0.3, xpd = TRUE, font = txt_font)
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 0.5, xpd = TRUE, font = txt_font)
df
rgb(
rbind(c(228, 26, 28),
c(77, 175, 74),
c(55, 126, 184)),
max = 255)
num_categs
sector_pal = rgb(
rbind(c(228, 26, 28),
c(77, 175, 74),
c(55, 126, 184)),
max = 255)
sector_pal[unclass(categories)]
sector_pal = rgb(
rbind(c(228, 26, 28),
c(77, 175, 74),
c(55, 126, 184)),
max = 255)
# colors of labels and points
txt_pal = sector_pal[unclass(categories)]
pch_pal = paste(txt_pal, "55", sep='')
txt_col = txt_pal
pch_col = pch_pal
txt_font = unclass(categories)
# additional params
nobs = length(categories)
nedges = nrow(graph_edges)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 0.5, xpd = TRUE, font = txt_font)
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
# read in the Prioritization Criteria data
Cri = read.csv("http://digitalcommons.lmu.edu/cgi/viewcontent.cgi?filename=1&article=1132&context=cate&type=additional")
# these labels are created to override the existing row names
organizations = c(
"The Friends of Wyman Park Dell",
"Mahan Rykiel",
"BWB",
"SouthEast CDC",
"Baltimore Office of Sustainability",
"Brooklyn and Curtis Bay Coalition, Inc.",
"Patterson Park Neighborhood Association",
"DOT",
"RK&K",
"Midtown Community Benefits District",
"Wyndhurst Neighborhood",
"Parks & People Foundation",
"DPW",
"Roland Park Civic League (Roland Park)",
"Roland Park Civic League (City)",
"Office of Public Health Preparedness & Response",
"BCRP - Capital Development",
"Bartlett Tree Experts",
"Baltimore Tree Trust",
"Department of General Services",
"Baltimore Medical System (E Baltimore)",
"Baltimore Medical System (City)",
"Department of Planning",
"Park Heights Renaissance",
"CPHA")
# add row names
rownames(Cri) = organizations
# build an hclust object using a distance matrix of euclidian distances
# and Ward's agglomeration method
dm <- hclust(dist(Cri[,-1], method = "euclidean"), method = "ward.D")
# vector of organization sectors
sectors = c("NGO", "Bus", "NGO", "NGO", "Gov",
"NGO", "NGO", "Gov", "Bus", "NGO",
"NGO", "NGO", "Gov", "NGO", "NGO",
"Gov", "Gov", "Bus", "NGO", "Gov",
"Gov", "Gov", "Gov", "NGO", "NGO")
# data frame of organizations and their sectors
df <- data.frame(
Org = organizations,
Sector = sectors)
dataset = Cri[,-1]
categories = df$Sector
dist_method = "euclidean"
clus_method = "ward.D"
# required packages
require(ape)     # for phylo trees
require(igraph)  # for graphs
# distance matrix
dist_data = dist(dataset, method = dist_method)
# hierarchical clustering
hcluster = hclust(dist_data, method = clus_method)
# cut dendrogram in given number of clusters
num_categs = nlevels(categories)
# convert to phylo object
phylo_tree = as.phylo(hcluster)
# get edges
graph_edges = phylo_tree$edge
# convert to graph
graph_net = graph.edgelist(graph_edges)
# extract layout (x-y coords)
graph_layout = layout.auto(graph_net)
# color palette
sector_pal = rgb(
rbind(c(228, 26, 28),
c(77, 175, 74),
c(55, 126, 184)),
max = 255)
# colors of labels and points
txt_pal = sector_pal[unclass(categories)]
pch_pal = paste(txt_pal, "55", sep='')
txt_col = txt_pal
pch_col = pch_pal
txt_font = unclass(categories)
# additional params
nobs = length(categories)
nedges = nrow(graph_edges)
# start plot
plot(graph_layout[,1], graph_layout[,2], type = "n", axes = FALSE,
xlab = "", ylab = "")
# draw tree branches
segments(
x0 = graph_layout[graph_edges[,1],1],
y0 = graph_layout[graph_edges[,1],2],
x1 = graph_layout[graph_edges[,2],1],
y1 = graph_layout[graph_edges[,2],2],
col = "#dcdcdc55", lwd = 3.5
)
# add tree leafs
points(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = pch_col,
pch = 19, cex = 2)
# add empty nodes
points(graph_layout[(nobs+1):nedges,1], graph_layout[(nobs+1):nedges,2],
col = "gray90", pch = 19, cex = 0.5)
# add node labels
text(graph_layout[1:nobs,1], graph_layout[1:nobs,2], col = txt_col,
phylo_tree$tip.label, cex = 0.8, xpd = TRUE, font = txt_font)
rm(list = ls())
# ========================================================
# Data
# ========================================================
# setting seed for random numbers
set.seed(1111)
# random normal distributions
den1 = density(rnorm(500))
den2 = density(rnorm(500, 1, 1.5))
den3 = density(rnorm(500, -1, 1.5))
# colors for each distribution
col1 = hsv(h = 0.65, s = 0.6, v = 0.8, alpha = 0.5)
col2 = hsv(h = 0.85, s = 0.6, v = 0.8, alpha = 0.5)
col3 = hsv(h = 0.55, s = 0.6, v = 0.8, alpha = 0.5)
plot.new()
# plot window
plot.window(xlim = c(-6,6), ylim = c(0,0.4))
# add axes
axis(side = 1, pos = 0, at = seq(from=-6, to=6, by=2), col = "gray20",
lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = -6, at = seq(from=0, to=0.4, by=0.1), col = "gray20",
las = 2, lwd.ticks = 0.5, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# density 1
polygon(den1$x, den1$y, col = col1, border = col1)
# density 2
polygon(den2$x, den2$y, col = col2, border = col2)
# density 3
polygon(den3$x, den3$y, col = col3, border = col3)
# add legends
text(1.3, 0.35, labels = "Normal(0, 1)", col = "gray30", cex = 0.9)
text(3.8, 0.15, labels = "Normal(1, 1.5)", col = "gray30", cex = 0.9)
text(-3.6, 0.15, labels = "Normal(-1, 1.5)", col = "gray30", cex = 0.9)
rm(list =ls())
\documentclass{beamer}
# ========================================================
# Data
# ========================================================
# setting seed for random numbers
set.seed(1111)
# random normal distributions
den1 = density(rnorm(500))
den2 = density(rnorm(500, 1, 1.5))
den3 = density(rnorm(500, -1, 1.5))
# colors for each distribution
col1 = hsv(h = 0.65, s = 0.6, v = 0.8, alpha = 0.5)
col2 = hsv(h = 0.85, s = 0.6, v = 0.8, alpha = 0.5)
col3 = hsv(h = 0.55, s = 0.6, v = 0.8, alpha = 0.5)
plot.window(xlim = c(-6,6), ylim = c(0,0.4))
# add axes
axis(side = 1, pos = 0, at = seq(from=-6, to=6, by=2), col = "gray20",
lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = -6, at = seq(from=0, to=0.4, by=0.1), col = "gray20",
las = 2, lwd.ticks = 0.5, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# density 1
polygon(den1$x, den1$y, col = "green", border = "green")
# density 2
polygon(den2$x, den2$y, col = "blue", border = "blue")
# density 3
polygon(den3$x, den3$y, col = "orange", border = "orange")
# setting seed for random numbers
set.seed(1111)
# random normal distributions
den1 = density(rnorm(500))
den2 = density(rnorm(500, 1, 1.5))
den3 = density(rnorm(500, -1, 1.5))
# colors for each distribution
col1 = hsv(h = 0.65, s = 0.6, v = 0.8, alpha = 0.5)
col2 = hsv(h = 0.85, s = 0.6, v = 0.8, alpha = 0.5)
col3 = hsv(h = 0.55, s = 0.6, v = 0.8, alpha = 0.5)
plot.new()
# plot window
plot.window(xlim = c(-6,6), ylim = c(0,0.4))
# add axes
axis(side = 1, pos = 0, at = seq(from=-6, to=6, by=2), col = "gray20",
lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = -6, at = seq(from=0, to=0.4, by=0.1), col = "gray20",
las = 2, lwd.ticks = 0.5, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# density 1
polygon(den1$x, den1$y, col = "green", border = "green")
# density 2
polygon(den2$x, den2$y, col = "blue", border = "blue")
# density 3
polygon(den3$x, den3$y, col = "orange", border = "orange")
plot(density(den1))
plot(den1)
plot(den2)
plot(den3)
rm(list =ls())
plot(den3)
# setting seed for random numbers
set.seed(1111)
# random normal distributions
den1 = density(rnorm(500))
den2 = density(rnorm(500, 1, 1.5))
den3 = density(rnorm(500, -1, 1.5))
# individual density plots
plot(den1)
plot(den2)
plot(den3)
plot(den1)
plot(den2)
plot(den3)
# colors for each distribution
col1 = hsv(h = 0.65, s = 0.6, v = 0.8, alpha = 0.5)
col2 = hsv(h = 0.85, s = 0.6, v = 0.8, alpha = 0.5)
col3 = hsv(h = 0.55, s = 0.6, v = 0.8, alpha = 0.5)
# set graphic margins
op = par(mar = c(3, 3, 2, 2))
# call new plot
plot.new()
# plot window
plot.window(xlim = c(-6,6), ylim = c(0,0.4))
# add axes
axis(side = 1, pos = 0, at = seq(from=-6, to=6, by=2), col = "gray20",
lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = -6, at = seq(from=0, to=0.4, by=0.1), col = "gray20",
las = 2, lwd.ticks = 0.5, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# density 1
polygon(den1$x, den1$y, col = col1, border = col1)
# density 2
polygon(den2$x, den2$y, col = col2, border = col2)
# density 3
polygon(den3$x, den3$y, col = col3, border = col3)
# add legends
text(1.3, 0.35, labels = "Normal(0, 1)", col = "gray30", cex = 0.9)
text(3.8, 0.15, labels = "Normal(1, 1.5)", col = "gray30", cex = 0.9)
text(-3.6, 0.15, labels = "Normal(-1, 1.5)", col = "gray30", cex = 0.9)
# turn off par
par(op)
class(den1)
den1
# random normal variables
var1 = rnorm(500)
var2 = rnorm(500, 1, 1.5)
var3 = rnorm(500, -1, 1.5)
distribs = data.frame(
x = cbind(var1, var2, var3),
g = gl(n = 3, k = 500))
# load ggplot2
library(ggplot2)
# plot
ggplot(data = distribs, aes(x = x)) +
geom_density()
head(distribs)
distribs = data.frame(
x = c(var1, var2, var3),
g = gl(n = 3, k = 500))
# load ggplot2
library(ggplot2)
# plot
ggplot(data = distribs, aes(x = x)) +
geom_density()
ggplot(data = distribs, aes(x = x, group = g)) +
geom_density()
ggplot(data = distribs, aes(x = x, group = g)) +
geom_density(aes(fill = g))
ggplot(data = distribs, aes(x = x, group = g)) +
geom_density(aes(fill = g), alpha = 0.5)
ggplot(data = distribs, aes(x = x, group = g)) +
geom_density(aes(fill = g, color = g), alpha = 0.5)
distribs = data.frame(
values = c(var1, var2, var3),
type = gl(n = 3, k = 500))
# load ggplot2
library(ggplot2)
# plot
ggplot(data = distribs, aes(x = values, group = type)) +
geom_density(aes(fill = type, color = type), alpha = 0.5)
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("/Users/Gaston/Documents/gastonstat.github.io/blog/Rmd")
KnitPost("2014-08-16-Density-Curves.Rmd")
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("/Users/Gaston/Documents/gastonstat.github.io/blog/Rmd")
KnitPost("2014-08-16-Density-Curves.Rmd")
KnitPost("2014-08-16-Density-Curves.Rmd")
KnitPost("2014-08-16-Density-Curves.Rmd")
KnitPost("2014-08-16-Density-Curves.Rmd")
