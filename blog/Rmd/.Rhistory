# define plot window
plot.window(xlim = c(0, 20), ylim = c(0, 10))
# add axis
axis(side = 1, pos = 0, lwd.ticks = 0, labels = FALSE)
axis(side = 2, pos = 0, lwd.ticks = 0, labels = FALSE)
# add tick labels
mtext(seq(from=0, to=20, by=2), side = 1, line = -0.2,
at = seq(from=0, to=20, by=2))
mtext(seq(from=0, to=10, by=2), side = 2, line = -0.7,
at = seq(from=0, to=10, by=2), las = 2)
# add grid lines (don't use abline because it misbehaves)
segments(rep(0, 10), seq(from=0, to=10), rep(20, 10),
seq(from=0, to=10), col = "gray90")
segments(seq(from=0, to=20), rep(0, 10), seq(from=0, to=20),
rep(10, 10), col = "gray90")
# add points
points(x, y, pch = 20)
# vertical error bars
arrows(x0 = x, y0 = y - y_err, x1 = x, y1 = y + y_err, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# horizontal error bars
arrows(x0 = x - x_err, y0 = y, x1 = x + x_err, y1 = y, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# turn off graphic parameters
par(op)
# set graphic margins
op = par(mar = c(3, 2, 2, 2))
# call plot
plot.new()
# define plot window
plot.window(xlim = c(0, 20), ylim = c(0, 10))
# add axis
axis(side = 1, pos = 0, lwd.ticks = 0, labels = FALSE)
axis(side = 2, pos = 0, lwd.ticks = 0, labels = FALSE)
# add tick labels
mtext(seq(from=0, to=20, by=2), side = 1, line = -0.2,
at = seq(from=0, to=20, by=2))
mtext(seq(from=0, to=10, by=2), side = 2, line = -0.7,
at = seq(from=0, to=10, by=2), las = 2)
# add grid lines (don't use abline because it misbehaves)
segments(rep(0, 10), seq(from=0, to=10), rep(20, 10),
seq(from=0, to=10), col = "gray90")
segments(seq(from=0, to=20), rep(0, 10), seq(from=0, to=20),
rep(10, 10), col = "gray90")
# add points
points(x, y, pch = 20)
# vertical error bars
arrows(x0 = x, y0 = y - y_err, x1 = x, y1 = y + y_err, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# horizontal error bars
arrows(x0 = x - x_err, y0 = y, x1 = x + x_err, y1 = y, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# turn off graphic parameters
par(op)
# set graphic margins
op = par(mar = c(2, 2, 1, 1))
# call plot
plot.new()
# define plot window
plot.window(xlim = c(0, 20), ylim = c(0, 10))
# add axis
axis(side = 1, pos = 0, lwd.ticks = 0, labels = FALSE)
axis(side = 2, pos = 0, lwd.ticks = 0, labels = FALSE)
# add tick labels
mtext(seq(from=0, to=20, by=2), side = 1, line = -0.2,
at = seq(from=0, to=20, by=2))
mtext(seq(from=0, to=10, by=2), side = 2, line = -0.7,
at = seq(from=0, to=10, by=2), las = 2)
# add grid lines (don't use abline because it misbehaves)
segments(rep(0, 10), seq(from=0, to=10), rep(20, 10),
seq(from=0, to=10), col = "gray90")
segments(seq(from=0, to=20), rep(0, 10), seq(from=0, to=20),
rep(10, 10), col = "gray90")
# add points
points(x, y, pch = 20)
# vertical error bars
arrows(x0 = x, y0 = y - y_err, x1 = x, y1 = y + y_err, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# horizontal error bars
arrows(x0 = x - x_err, y0 = y, x1 = x + x_err, y1 = y, angle = 90,
col = "gray20", code = 3, length = 0.05, lwd = 0.4)
# turn off graphic parameters
par(op)
rm(list = ls())
library(MASS)
# setting seed for random numbers
set.seed(557)
# data
num_rows = 4
num_cols = 3
X = matrix(runif(num_rows*num_cols, 0.1, 1), nrow = num_rows, ncol = num_cols)
colnames(X) = c("A", "B", "C")
# colors (from light orange to dark blue)
cols = c("#FDD0A2", "#FD8D3C", "#C6DBEF", "#2B8CBE")
# set graphic margins
op = par(mar = c(3, 3, 1, 2))
# barplot
barplot(X[,num_cols:1], beside = TRUE, horiz = TRUE, xlim = c(0, 1),
axes = FALSE, border = NA, names.arg = colnames(X)[num_cols:1],
las = 2, col = cols, cex.names = 1)
# add x axis
axis(side = 1, at = seq(from=0, to=1, by=0.2), lwd = 0,
lwd.ticks = 0.5, cex.axis = 1)
# add y axis
abline(v = 0, col = "black")
# add vertical lines
abline(v = seq(from=0.2, to=0.8, by=0.2), col = "white")
# location of values in bars
ini = seq(1, num_rows * num_cols + num_rows - 2)
fin = seq(2, num_rows * num_cols + num_rows - 1)
locs = ((ini + fin) / 2)
# add values in bars
text(X[,1], y = locs[11:14], labels = round(X[,1], 2),
pos = 2, col = "white", cex = 0.9)
text(X[,2], y = locs[6:9], labels = round(X[,2], 2),
pos = 2, col = "white", cex = 0.9)
text(X[,3], y = locs[1:4], labels = round(X[,3], 2),
pos = 2, col = "white", cex = 0.9)
# turn off par
par(op)
rm(list =ls())
# set graphic margins
op = par(mar = c(3, 3, 3, 2))
# histogram
hist(iris$Petal.Length, ylim=c(0, 40), col = "#8595E1",
border = "white", main = "", xlab = "", ylab = "", axes = FALSE)
# add axes
axis(side = 1, pos = 0, at = seq(from=1, to=7, by=1), col = "gray70",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, at = seq(from=0, to=40, by=10), col = "gray70",
las = 2, lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20",
lwd = 1.5, line = -0.5)
# add title
mtext("Histogram", side=3, at=1, col="gray30", line=0.5, cex=1.5, font=2)
mtext("Iris Petal Length", side=3, col="gray10", line=-1, cex=1)
# turn off par
par(op)
# set graphic margins
op = par(mar = c(3, 3, 2, 2))
# histogram
hist(iris$Petal.Length, ylim=c(0, 40), col = "#8595E1",
border = "white", main = "", xlab = "", ylab = "", axes = FALSE)
# add axes
axis(side = 1, pos = 0, at = seq(from=1, to=7, by=1), col = "gray70",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, at = seq(from=0, to=40, by=10), col = "gray70",
las = 2, lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20",
lwd = 1.5, line = -0.5)
# add title
mtext("Iris Petal Length", side=3, col="gray10", line=-1, cex=1)
# turn off par
par(op)
rm(list = ls())
# setting seed for random numbers
set.seed(1111)
# random numbers for x-y coordinates
x = runif(80, 0.5, 9.5)
y = x + rnorm(80, 0, 1.5)
y[y<0] = y[y<0] + runif(1, 1.5, 2)
y[y>10] = y[y>10] - runif(1, 1, 2)
# random numbers for point sizes
size = runif(80, 1, 2.5)
# factor with 2 categories
group = gl(2, 40)
# colors
col_group <- col_border <-rep("", 80)
col_group[group == 1] = "#8595E1AA"
col_group[group == 2] = "#E07B91AA"
col_border[group == 1] = "#4A6FE3AA"
col_border[group == 2] = "#D33F6AAA"
# set graphic margins
op = par(mar = c(3, 3, 2, 2))
# call new plot
plot.new()
# define plot window
plot.window(xlim = c(0,10), ylim = c(0, 12), xaxs = "i")
# add horizontal grid lines
abline(h = seq(from=0, to=12, by=2), col = "lightgray")
# add vertical grid lines (don't use abline because it misbehaves)
segments(0:12, rep(0, 12), 0:12, rep(12, 12), col = "lightgray")
# add axes
axis(side = 1, pos = 0, at = seq(from=0, to=10, by=1), col = "gray20",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = 0, at = seq(from=0, to=12, by=2), col = "gray20",
las = 2, lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# add points with color
points(x, y, pch = 19, col = col_group, cex = 0.9 * size)
# colored border of points
points(x, y, pch = 1, col = col_border, lwd = 2, cex = size)
# turn off par
par(op)
# set graphic margins
op = par(mar = c(3, 3, 1.5, 2))
# call new plot
plot.new()
# define plot window
plot.window(xlim = c(0,10), ylim = c(0, 12), xaxs = "i")
# add horizontal grid lines
abline(h = seq(from=0, to=12, by=2), col = "lightgray")
# add vertical grid lines (don't use abline because it misbehaves)
segments(0:12, rep(0, 12), 0:12, rep(12, 12), col = "lightgray")
# add axes
axis(side = 1, pos = 0, at = seq(from=0, to=10, by=1), col = "gray20",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = 0, at = seq(from=0, to=12, by=2), col = "gray20",
las = 2, lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# add points with color
points(x, y, pch = 19, col = col_group, cex = 0.9 * size)
# colored border of points
points(x, y, pch = 1, col = col_border, lwd = 2, cex = size)
# turn off par
par(op)
library(dplyr)
install.packages("Rcpp")
install.packages("Rcpp")
library(dplyr)
# folder containing data files
folder = "/Users/Gaston/Documents/pydata-book/data/"
# column names for data set 'ratings.txt'
ratings_colnames = c(
"user_id",
"movie_id",
"ratings",
"timestamp"
)
# import data 'ratings'
ratings = read.table(paste(folder, "ratings.txt", sep=''),
header = FALSE,
sep = ",",
col.names = ratings_colnames)
# column names for data set 'users.txt'
users_colnames = c(
"user_id",
"gender",
"age",
"occupation",
"zipcode"
)
# import data 'users'
users = read.table(paste(folder, "users.txt", sep=''),
header = FALSE,
sep = ",",
col.names = users_colnames)
# column names for data set 'movies.txt'
movies_colnames = c(
"movie_id",
"titles",
"genres"
)
# locale should be set to C to avoid getting
# stupid warnings from strsplit()
Sys.setlocale(locale="C")
# import data 'movies'
movies_file = readLines(paste(folder, "movies.txt", sep=''))
movies = data.frame(
movie_id = character(),
titles = character(),
genres = character(),
stringsAsFactors = FALSE)
for (i in 1L:length(movies_file))
{
movie = strsplit(movies_file[i], split=";")
movies[i,] = movie[[1]]
}
# merge ratings with users
ratings_users = merge(ratings, users, by = "user_id")
dim(ratings)
dim(users)
dim(ratings_users)
# merge movies with ratings_users
dataset = merge(movies, ratings_users, by = "movie_id")
?summarise
zz = summarise(dataset, avg = mean(ratings), group_by(titles, gender))
str(dataset)
factor()
dataset$titles = as.factor(dataset$title)
zz = summarise(dataset, avg = mean(ratings), group_by(titles, gender))
zz = summarise(dataset, avg = mean(ratings), group_by(gender))
zz = summarise(dataset, avg = mean(ratings))
zz
movies_gender = group_by(dataset, gender)
dim(movies_gender)
dim(dataset)
head(movies_gender)
zz = summarise(movies_gender, avg = mean(ratings))
zz
movies_gender = group_by(dataset, titles, gender)
zz = summarise(movies_gender, avg = mean(ratings))
zz
dim(zz)
# mean ratings by gender
library(sqldf)
mean_ratings = sqldf("SELECT titles, AVG(ratings) FROM dataset GROUP BY titles, gender")
head(mean_ratings)
?read.table
x = read.table(header = FALSE,
text = "
1::John::26::male
2::Dan::30::male
3::Rori::31:female
4::Tracy::40::female
5::Luke::30::male
")
x
x = read.table(header = FALSE,
text = "
1::John::26::male
2::Dan::30::male
3::Rori::31:female
4::Tracy::40::female
5::Luke::30::male",
sep = "::")
x = read.table(header = FALSE,
text = "
1::John::26::male
2::Dan::30::male
3::Rori::31:female
4::Tracy::40::female
5::Luke::30::male
",
col.names = c("num", "name", "age", "gender"),
sep = "::")
y = read.table(header = FALSE,
text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"),
sep = ":")
z = read.table(header = TRUE, text = "
a b
1 2
3 4
")
z
y = read.table(header = FALSE,
text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"),
sep = ":")
y = read.table(header = FALSE,
text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"))
y = read.table(header = FALSE, text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"),
sep = ":")
y
x = read.table(header = FALSE,
text = "
1::John::26::male
2::Dan::30::male
3::Rori::31::female
4::Tracy::40::female
5::Luke::30::male
",
col.names = c("num", "name", "age", "gender"),
sep = "::")
y = read.table(
header = FALSE,
text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"),
sep = ":")
y = read.table(
header = FALSE,
text = "
1:John:26:male
2:Dan:30:male
3:Rori:31:female
4:Tracy:40:female
5:Luke:30:male
",
col.names = c("num", "name", "age", "gender"),
sep = ":")
y
x = read.table(
header = FALSE,
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
",
col.names = c("num", "name", "gender", "class"),
sep = "::")
a = readLines("
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
")
a
readLines
scan("
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
")
?scan
scan(file = "",
"
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
")
a = scan(file = "",
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
")
?readLines
read.table(file = "/Users/Gaston/Documents/gastonstat.github.io/data/fakedata.dat"
header = FALSE,
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
",
col.names = c("num", "name", "gender", "class"),
sep = "::")
read.table(file = "/Users/Gaston/Documents/gastonstat.github.io/data/fakedata.dat",
header = FALSE,
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
",
col.names = c("num", "name", "gender", "class"),
sep = "::")
read.table(file = "/Users/Gaston/Documents/gastonstat.github.io/data/fakedata.dat",
header = FALSE,
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
",
col.names = c("num", "name", "gender", "class"),
sep = "::")
read.table(file = "/Users/Gaston/Documents/gastonstat.github.io/data/fakedata.dat",
header = FALSE,
text = "
1::Leia::female::princess
2::Luke::male::jedi
3::R2D2::unknown::robot
4::Anakin::male::jedi
5::Amidala::female::queen
",
col.names = c("num", "name", "gender", "class"),
sep = "::")
"Error in scan(file, what = "", sep = sep, quote = quote, nlines = 1, quiet = TRUE,  :
invalid 'sep' value: must be one byte"
'Error in scan(file, what = "", sep = sep, quote = quote, nlines = 1, quiet = TRUE,  :
invalid 'sep' value: must be one byte'
rm(list = ls())
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("/Users/Gaston/Documents/gastonstat.github.io/blog/Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
KnitPost("2014-04-20-Failing-reading-table-in-R.Rmd")
