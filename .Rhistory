library(MASS)
# setting seed for random numbers
set.seed(557)
# data
num_rows = 4
num_cols = 3
X = matrix(runif(num_rows*num_cols, 0.1, 1), nrow = num_rows, ncol = num_cols)
colnames(X) = c("A", "B", "C")
# colors (from light orange to dark blue)
cols = c("#FDD0A2", "#FD8D3C", "#C6DBEF", "#2B8CBE")
# set graphic margins
op = par(mar = c(3, 3, 1, 2))
# barplot
barplot(X[,num_cols:1], beside = TRUE, horiz = TRUE, xlim = c(0, 1),
axes = FALSE, border = NA, names.arg = colnames(X)[num_cols:1],
las = 2, col = cols, cex.names = 1)
# add x axis
axis(side = 1, at = seq(from=0, to=1, by=0.2), lwd = 0,
lwd.ticks = 0.5, cex.axis = 1)
# add y axis
abline(v = 0, col = "black")
# add vertical lines
abline(v = seq(from=0.2, to=0.8, by=0.2), col = "white")
# location of values in bars
ini = seq(1, num_rows * num_cols + num_rows - 2)
fin = seq(2, num_rows * num_cols + num_rows - 1)
locs = ((ini + fin) / 2)
# add values in bars
text(X[,1], y = locs[11:14], labels = round(X[,1], 2),
pos = 2, col = "white", cex = 0.9)
text(X[,2], y = locs[6:9], labels = round(X[,2], 2),
pos = 2, col = "white", cex = 0.9)
text(X[,3], y = locs[1:4], labels = round(X[,3], 2),
pos = 2, col = "white", cex = 0.9)
# turn off par
par(op)
rm(list =ls())
# set graphic margins
op = par(mar = c(3, 3, 3, 2))
# histogram
hist(iris$Petal.Length, ylim=c(0, 40), col = "#8595E1",
border = "white", main = "", xlab = "", ylab = "", axes = FALSE)
# add axes
axis(side = 1, pos = 0, at = seq(from=1, to=7, by=1), col = "gray70",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, at = seq(from=0, to=40, by=10), col = "gray70",
las = 2, lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20",
lwd = 1.5, line = -0.5)
# add title
mtext("Histogram", side=3, at=1, col="gray30", line=0.5, cex=1.5, font=2)
mtext("Iris Petal Length", side=3, col="gray10", line=-1, cex=1)
# turn off par
par(op)
# set graphic margins
op = par(mar = c(3, 3, 2, 2))
# histogram
hist(iris$Petal.Length, ylim=c(0, 40), col = "#8595E1",
border = "white", main = "", xlab = "", ylab = "", axes = FALSE)
# add axes
axis(side = 1, pos = 0, at = seq(from=1, to=7, by=1), col = "gray70",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, at = seq(from=0, to=40, by=10), col = "gray70",
las = 2, lwd.ticks = 0.25, cex.axis = 1, col.axis = "gray20",
lwd = 1.5, line = -0.5)
# add title
mtext("Iris Petal Length", side=3, col="gray10", line=-1, cex=1)
# turn off par
par(op)
rm(list = ls())
# setting seed for random numbers
set.seed(1111)
# random numbers for x-y coordinates
x = runif(80, 0.5, 9.5)
y = x + rnorm(80, 0, 1.5)
y[y<0] = y[y<0] + runif(1, 1.5, 2)
y[y>10] = y[y>10] - runif(1, 1, 2)
# random numbers for point sizes
size = runif(80, 1, 2.5)
# factor with 2 categories
group = gl(2, 40)
# colors
col_group <- col_border <-rep("", 80)
col_group[group == 1] = "#8595E1AA"
col_group[group == 2] = "#E07B91AA"
col_border[group == 1] = "#4A6FE3AA"
col_border[group == 2] = "#D33F6AAA"
# set graphic margins
op = par(mar = c(3, 3, 2, 2))
# call new plot
plot.new()
# define plot window
plot.window(xlim = c(0,10), ylim = c(0, 12), xaxs = "i")
# add horizontal grid lines
abline(h = seq(from=0, to=12, by=2), col = "lightgray")
# add vertical grid lines (don't use abline because it misbehaves)
segments(0:12, rep(0, 12), 0:12, rep(12, 12), col = "lightgray")
# add axes
axis(side = 1, pos = 0, at = seq(from=0, to=10, by=1), col = "gray20",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = 0, at = seq(from=0, to=12, by=2), col = "gray20",
las = 2, lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# add points with color
points(x, y, pch = 19, col = col_group, cex = 0.9 * size)
# colored border of points
points(x, y, pch = 1, col = col_border, lwd = 2, cex = size)
# turn off par
par(op)
# set graphic margins
op = par(mar = c(3, 3, 1.5, 2))
# call new plot
plot.new()
# define plot window
plot.window(xlim = c(0,10), ylim = c(0, 12), xaxs = "i")
# add horizontal grid lines
abline(h = seq(from=0, to=12, by=2), col = "lightgray")
# add vertical grid lines (don't use abline because it misbehaves)
segments(0:12, rep(0, 12), 0:12, rep(12, 12), col = "lightgray")
# add axes
axis(side = 1, pos = 0, at = seq(from=0, to=10, by=1), col = "gray20",
lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
axis(side = 2, pos = 0, at = seq(from=0, to=12, by=2), col = "gray20",
las = 2, lwd.ticks = 0, cex.axis = 1, col.axis = "gray20", lwd = 1.5)
# add points with color
points(x, y, pch = 19, col = col_group, cex = 0.9 * size)
# colored border of points
points(x, y, pch = 1, col = col_border, lwd = 2, cex = size)
# turn off par
par(op)
library(tripack)
install.packages("tripack")
library(tripack)
plot(voronoi.mosaic(runif(100),runif(100),duplicate="remove"))
?voronoi
data(tritest)
str(tritest)
?tritest
tritest.vm <- voronoi.mosaic(tritest$x,tritest$y)
tritest.vm
class(tritest)
lapply(tritest, length)
tritest
trixy = do.call("cbind", tritest)
plot(trixy)
plot(tritest.vm)
tritest.cells <- cells(tritest.vm)
plot(tritest.vm)
tritest.cells
tr<-tri.mesh(tritest$x,tritest$y)
convex.hull(tr,plot.it=TRUE)
# random points:
rand.tr<-tri.mesh(runif(10),runif(10))
plot(rand.tr)
rand.ch<-convex.hull(rand.tr, plot.it=TRUE, add=TRUE, col="red")
data(quakes)
quakes.part<-quakes[(quakes[,1]<=-17 & quakes[,1]>=-19.0 &
quakes[,2]<=182.0 & quakes[,2]>=180.0),]
quakes.tri<-tri.mesh(quakes.part$lon, quakes.part$lat, duplicate="remove")
plot(quakes.tri)
convex.hull(quakes.tri, plot.it=TRUE, add=TRUE, col="red")
?quakes
dim(quakes)
head(quakes)
plot(quakes[,1:2])
plot(quakes.part[,1:2])
class(quakes.tri)
str(quakes.tri)
trixy = do.call("cbind", quakes.tri[2:3])
plot(trixy)
library(alphahull)
install.packages("alphahull")
library(alphahull)
delvor.obj <- delvor(tritest)
plot(delvor.obj)
x <- matrix(runif(20), nc = 2)
# Delaunay triangulation and Voronoi diagram calculation
delvor.obj <- delvor(x)
plot(delvor.obj)
n <- 300
theta<-runif(n,0,2*pi)
r<-sqrt(runif(n,0.25^2,0.5^2))
x<-cbind(0.5+r*cos(theta),0.5+r*sin(theta))
# Value of alpha
alpha <- 0.1
# alpha-shape
ashape.obj <- ashape(x, alpha = alpha)
# Plot alpha-shape in blue, sample points in black,
# and Delaunay triangulation in red
plot(ashape.obj, wlines= "del", col = c(4, 1, 2))
dim(x)
plot(x)
setwd("/Users/Gaston/Documents/gastonstat.github.io/")
images = system("ls images/rtist", intern = TRUE)
img_names = strsplit(images, split=".", fixed=TRUE)
img_names = unlist(lapply(img_names, function(x) x[1]))
img_names
index = "/Users/Gaston/Desktop/index.html"
# fill file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "<img class=\"gotplot\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], "\" />", sep = ''),
"\n", append = TRUE)
}
# end of gallery
cat(file = index, "</div>", "\n", append = TRUE)
index = "/Users/Gaston/Desktop/index.html"
# fill file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "<img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
}
# end of gallery
cat(file = index, "</div>", "\n", append = TRUE)
# fill file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
}
# end of gallery
cat(file = index, "</div>", "\n", append = TRUE)
img_names
images = system("ls images/rtist", intern = TRUE)
images
index
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], "\" />", sep = ''),
"\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
images
img_names = system("ls images/rtist", intern = TRUE)
img_names
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], "\" />", sep = ''),
"\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
getwd()
img_names
index = "/Users/Gaston/Documents/gastonstat.github.io/work/rtist/index.html"
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names)) {
cat(file = index,
paste(img, img_names[i], "\" />", sep = ''),
"\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
href = "  <a href=\"/work/rtist/"
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names))
{
# add 'a' tag
cat(file = index,
paste(href, img_names[i], "\">", sep = ''),
"\n", append = TRUE)
# add 'img' element
cat(file = index,
paste(img, img_names[i], "\" />", sep = ''),
"\n", append = TRUE)
# close 'a' tag
cat(file = index, "</a>\n\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
images = system("ls images/rtist", intern = TRUE)
img_names = strsplit(images, split=".", fixed=TRUE)
img_names = unlist(lapply(img_names, function(x) x[1]))
img_names
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <p>", "\n", append = TRUE)
cat(file = index, "  Some of my weird and abstract paintings with R", "\n",
append = TRUE)
cat(file = index, "  </p>", "\n", append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
href = "  <a href=\"/work/rtist/"
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names))
{
# add 'a' tag
cat(file = index,
paste(href, img_names[i], ".html\">", sep = ''),
"\n", append = TRUE)
# add 'img' element
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
# close 'a' tag
cat(file = index, "  </a>\n\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <h4>", "\n", append = TRUE)
cat(file = index, "  <h4>Some of my weird and abstract paintings with R</h4>", "\n\n",
append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
href = "  <a href=\"/work/rtist/"
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names))
{
# add 'a' tag
cat(file = index,
paste(href, img_names[i], ".html\">", sep = ''),
"\n", append = TRUE)
# add 'img' element
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
# close 'a' tag
cat(file = index, "  </a>\n\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <h4>Some of my weird and abstract paintings with R</h4>", "\n\n",
append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
href = "  <a href=\"/work/rtist/"
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names))
{
# add 'a' tag
cat(file = index,
paste(href, img_names[i], ".html\">", sep = ''),
"\n", append = TRUE)
# add 'img' element
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
# close 'a' tag
cat(file = index, "  </a>\n\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
# start writing output to 'index' file
# yaml header
cat(file = index, "---", "\n")
cat(file = index, "layout: flexible", "\n", append = TRUE)
cat(file = index, "title: R-tist", "\n", append = TRUE)
cat(file = index, "---", "\n\n", append = TRUE)
# add page title and abstract description
cat(file = index, "<div class=\"prose\">", "\n", append = TRUE)
cat(file = index, "  <h1>R-tist</h1>", "\n\n", append = TRUE)
cat(file = index, "  <h4>Some of my weird and abstract paintings with R</h4>", "\n",
append = TRUE)
cat(file = index, "</div>", "\n\n", append = TRUE)
# populate gallery section
cat(file = index, "<div id=\"gallery\">", "\n", append = TRUE)
href = "  <a href=\"/work/rtist/"
img = "  <img class=\"mosaic\" src=\"/images/rtist/"
for (i in 1L:length(img_names))
{
# add 'a' tag
cat(file = index,
paste(href, img_names[i], ".html\">", sep = ''),
"\n", append = TRUE)
# add 'img' element
cat(file = index,
paste(img, img_names[i], ".png\" />", sep = ''),
"\n", append = TRUE)
# close 'a' tag
cat(file = index, "  </a>\n\n", append = TRUE)
}
# end of 'div' gallery
cat(file = index, "</div>", "\n", append = TRUE)
